def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.rongcloud_im_plugin_example"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
//        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        ndk {
            abiFilters "armeabi-v7a"
        }
        //,"x86"
    }

    signingConfigs {
        config {
            storeFile file("rong_flutter.key")
            storePassword "rongcloud"
            keyAlias "rongcloud"
            keyPassword "rongcloud"
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            shrinkResources false
            minifyEnabled false
        }
    }

//    configurations.all {
//        resolutionStrategy.eachDependency { details ->
//            def requested = details.requested
//            if (requested.group == 'com.android.support') {
//                if (!requested.name.startsWith("multidex")) {
//                    details.useVersion '26.1.0'
//                }
//            }
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
//    testImplementation 'junit:junit:4.13.1'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

//    implementation 'androidx.appcompat:appcompat:1.2.0'

}
